<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:ut="clr-namespace:SuperSaiyan.GUI.Components" 
                    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ui="clr-namespace:SuperSaiyan.GUI"
                    xmlns:cc="clr-namespace:CustomControls">

    <!-- Base Template Colors -->
    <Color x:Key="CustomControlMouseOverColor">#FF3843C4</Color>
    <Color x:Key="CustomControlPressedColor">#FF211AA9</Color>
    <Color x:Key="CustomGlyphColor">#daa520</Color>
    <Color x:Key="CustomControlLightColor">White</Color>
    <Color x:Key="CustomControlMediumColor">#FF7381F9</Color>
    <Color x:Key="CustomBorderDarkColor">#FF444444</Color>
    <Color x:Key="CustomPressedBorderLightColor">#FF888888</Color>
    <Color x:Key="CustomPressedBorderDarkColor">#FF444444</Color>
    <Color x:Key="CustomBorderLightColor">#FFCCCCCC</Color>

    <ut:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed" />
    <ut:BoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter" TrueValue="Collapsed" FalseValue="Visible" />

    <!--<Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush po:Freeze="True" StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource CustomBorderLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource CustomBorderDarkColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush po:Freeze="True" StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource CustomControlLightColor}" />
                                                <GradientStop Color="{DynamicResource CustomControlMediumColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.Background>
                                <Grid>
                                    <Path Visibility="Collapsed" Width="9" Height="9" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 1 4.5 L 4 7.5 M 4 7.5 L 8 1">
                                        <Path.Stroke>
                                            <SolidColorBrush po:Freeze="True" Color="{DynamicResource CustomGlyphColor}" />
                                        </Path.Stroke>
                                    </Path>

                                    <Path Visibility="Collapsed" Width="7" Height="7" x:Name="InderminateMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 7 L 7 0">
                                        <Path.Stroke>
                                            <SolidColorBrush po:Freeze="True" Color="{DynamicResource CustomGlyphColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CustomControlMouseOverColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CustomControlPressedColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CustomPressedBorderDarkColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource CustomPressedBorderLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <DataTemplate x:Key="CheckboxFormTemplate">
        <Border Background="Transparent" Effect="{x:Null}" BorderBrush="#444" CornerRadius="1" Padding="0,2,2,2" BorderThickness="0,1,0,0" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}">
            <WrapPanel Margin="{Binding IsGroupChild, Converter={StaticResource BoolToMarginConverter}}">
                <CheckBox x:Name="CheckBoxFieldCheckbox" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Value}" Margin="0,0,6,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
                <CheckBox IsEnabled="{Binding IsEnabled}" ToolTip="{Binding Description}" Style="{DynamicResource TextBlockCheckBox}" FontWeight="Regular" IsChecked="{Binding IsChecked, ElementName=CheckBoxFieldCheckbox}" Content="{Binding DisplayName}" Margin="0,0,0,0" />
            </WrapPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="InlineCheckboxFormTemplate">
        <WrapPanel Margin="{Binding IsGroupChild, Converter={StaticResource BoolToMarginConverter}}">
            <CheckBox x:Name="CheckBoxFieldCheckbox" IsEnabled="{Binding IsEnabled}" IsChecked="{Binding Value}" Margin="0,0,6,0" HorizontalAlignment="Left" VerticalAlignment="Center" />
            <CheckBox IsEnabled="{Binding IsEnabled}" ToolTip="{Binding Description}" Style="{DynamicResource TextBlockCheckBox}" FontWeight="Regular" IsChecked="{Binding IsChecked, ElementName=CheckBoxFieldCheckbox}" Content="{Binding DisplayName}" Margin="0,0,0,0" />
        </WrapPanel>
    </DataTemplate>
    
</ResourceDictionary>